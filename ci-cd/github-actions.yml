name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  plan:
    name: Terraform Plan (staging)
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: staging
      AWS_REGION: us-east-1
      TFSTATE_BUCKET: ${{ secrets.TFSTATE_BUCKET }}
      TFSTATE_LOCK_TABLE: ${{ secrets.TFSTATE_LOCK_TABLE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build Frontend
        run: |
          npm ci
          npm run build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (remote backend)
        working-directory: infrastructure/terraform
        run: |
          terraform init \
            -backend-config="bucket=${TFSTATE_BUCKET}" \
            -backend-config="key=envs/${ENVIRONMENT}/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TFSTATE_LOCK_TABLE}" \
            -backend-config="encrypt=true"

      - name: Terraform Workspace Select
        working-directory: infrastructure/terraform
        run: |
          terraform workspace select ${ENVIRONMENT} || terraform workspace new ${ENVIRONMENT}

      - name: Terraform Plan
        working-directory: infrastructure/terraform
        run: terraform plan -var="environment=${ENVIRONMENT}" -no-color

  apply:
    name: Terraform Apply (staging)
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'workflow_dispatch'
    env:
      ENVIRONMENT: staging
      AWS_REGION: us-east-1
      TFSTATE_BUCKET: ${{ secrets.TFSTATE_BUCKET }}
      TFSTATE_LOCK_TABLE: ${{ secrets.TFSTATE_LOCK_TABLE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (remote backend)
        working-directory: infrastructure/terraform
        run: |
          terraform init \
            -backend-config="bucket=${TFSTATE_BUCKET}" \
            -backend-config="key=envs/${ENVIRONMENT}/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TFSTATE_LOCK_TABLE}" \
            -backend-config="encrypt=true"

      - name: Terraform Apply
        working-directory: infrastructure/terraform
        run: terraform apply -auto-approve