name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  plan:
    name: Terraform Plan (staging)
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: staging
      AWS_REGION: us-east-1
      TFSTATE_BUCKET: ${{ secrets.TFSTATE_BUCKET }}
      TFSTATE_LOCK_TABLE: ${{ secrets.TFSTATE_LOCK_TABLE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare backend deps for Lambda (Node 22 on AL2023)
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/src/backend:/var/task" \
            -w /var/task \
            public.ecr.aws/lambda/nodejs:22 \
            /bin/sh -c "npm ci --omit=dev"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (remote backend)
        working-directory: infrastructure/terraform
        run: |
          terraform init \
            -backend-config="bucket=${TFSTATE_BUCKET}" \
            -backend-config="key=envs/${ENVIRONMENT}/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TFSTATE_LOCK_TABLE}" \
            -backend-config="encrypt=true"

      - name: Terraform Workspace Select
        working-directory: infrastructure/terraform
        run: |
          terraform workspace select ${ENVIRONMENT} || terraform workspace new ${ENVIRONMENT}

      - name: Terraform Fmt
        run: terraform fmt -recursive

      - name: Terraform Validate
        working-directory: infrastructure/terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: infrastructure/terraform
        run: terraform plan -var="environment=${ENVIRONMENT}" -out="tfplan-${ENVIRONMENT}.bin" -no-color

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ env.ENVIRONMENT }}
          path: infrastructure/terraform/tfplan-${{ env.ENVIRONMENT }}.bin

  apply:
    name: Terraform Apply (staging)
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'workflow_dispatch'
    environment: staging
    env:
      ENVIRONMENT: staging
      AWS_REGION: us-east-1
      TFSTATE_BUCKET: ${{ secrets.TFSTATE_BUCKET }}
      TFSTATE_LOCK_TABLE: ${{ secrets.TFSTATE_LOCK_TABLE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (remote backend)
        run: |
          terraform init \
            -backend-config="bucket=${TFSTATE_BUCKET}" \
            -backend-config="key=envs/${ENVIRONMENT}/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TFSTATE_LOCK_TABLE}" \
            -backend-config="encrypt=true"

      - name: Terraform Workspace Select
        working-directory: infrastructure/terraform
        run: |
          terraform workspace select ${ENVIRONMENT} || terraform workspace new ${ENVIRONMENT}

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ env.ENVIRONMENT }}
          path: infrastructure/terraform

      - name: Terraform Apply
        working-directory: infrastructure/terraform
        run: terraform apply -auto-approve tfplan-${ENVIRONMENT}.bin

  deploy_frontend:
    name: Deploy Frontend + CloudFront Invalidation
    runs-on: ubuntu-latest
    needs: apply
    env:
      ENVIRONMENT: staging
      AWS_REGION: us-east-1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Frontend
        run: bash ci-cd/deploy-frontend.sh

  smoke_tests:
    name: Smoke Tests (CDN + API)
    runs-on: ubuntu-latest
    needs: deploy_frontend
    env:
      ENVIRONMENT: staging
      AWS_REGION: us-east-1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Run Smoke Tests
        run: ENVIRONMENT=${ENVIRONMENT} bash ci-cd/smoke-tests.sh